{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationDnsName": {
            "type": "string"
        },
        "virtualMachineAdminUsername": {
            "type": "string",
            "defaultValue": "devopsadmin",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "virtualMachineAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        }
    },
    "variables": {
        "location1": "westeurope",
        "location2": "northeurope",
        "lbLoc1name": "myapp-we-lb",
        "lbLoc2name": "myapp-ne-lb",
        "vmLoc1Prefix": "myapp-we-vm",
        "vmLoc2Prefix": "myapp-ne-vm",
        "pipLb1Name": "myapp-we-lb-ip",
        "pipLb2Name": "myapp-ne-lb-ip",
        "nsgLoc1Name": "myapp-we-nsg",
        "nsgLoc2Name": "myapp-ne-nsg",
        "secRules": [
            {
                "name": "HTTPS",
                "properties": {
                    "protocol": "TCP",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 300,
                    "direction": "Inbound",
                    "sourcePortRanges": [],
                    "destinationPortRanges": [],
                    "sourceAddressPrefixes": [],
                    "destinationAddressPrefixes": []
                }
            },
            {
                "name": "HTTP",
                "properties": {
                    "protocol": "TCP",
                    "sourcePortRange": "*",
                    "destinationPortRange": "80",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 320,
                    "direction": "Inbound",
                    "sourcePortRanges": [],
                    "destinationPortRanges": [],
                    "sourceAddressPrefixes": [],
                    "destinationAddressPrefixes": []
                }
            }
        ],
        "vnetLoc1Name": "myapp-we-vnet",
        "vnetLoc2Name": "myapp-ne-vnet",
        "avSetLoc1Name": "myapp-we-vm-avset",
        "avSetLoc2Name": "myapp-ne-vm-avset",
        "trafficManagerName": "myapp-tm"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-07-01",
            "name": "[variables('nsgLoc1Name')]",
            "location": "[variables('location1')]",
            "properties": {
                "securityRules": "[variables('secRules')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-07-01",
            "name": "[variables('nsgLoc2Name')]",
            "location": "[variables('location2')]",
            "properties": {
                "securityRules": "[variables('secRules')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[variables('pipLb1Name')]",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc1Name'))]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[variables('pipLb2Name')]",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc2Name'))]"
                },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-07-01",
            "name": "[variables('vnetLoc1Name')]",
            "location": "[variables('location1')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "subnet01",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-07-01",
            "name": "[variables('vnetLoc2Name')]",
            "location": "[variables('location2')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "subnet01",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-03-01",
            "name": "[variables('avSetLoc1Name')]",
            "location": "[variables('location1')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "managed": "true"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-03-01",
            "name": "[variables('avSetLoc2Name')]",
            "location": "[variables('location2')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "managed": "true"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(variables('vmLoc1Prefix'),'-01')]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmLoc1Prefix'),'-01-nic'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetLoc1Name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetLoc1Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('vmLoc1Prefix'),'-01-osdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmLoc1Prefix'),'-01')]",
                    "adminUsername": "[parameters('virtualMachineAdminUsername')]",
                    "adminPassword": "[parameters('virtualMachineAdminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmLoc1Prefix'),'-01-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(variables('vmLoc2Prefix'),'-01')]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmLoc2Prefix'),'-01-nic'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetLoc2Name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetLoc2Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('vmLoc2Prefix'),'-01-osdisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmLoc2Prefix'),'-01')]",
                    "adminUsername": "[parameters('virtualMachineAdminUsername')]",
                    "adminPassword": "[parameters('virtualMachineAdminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmLoc2Prefix'),'-01-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-07-01",
            "name": "[variables('lbLoc1Name')]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb1Name'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb1Name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "lb01be",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(variables('lbLoc1Name'), 'rule')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc1Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc1Name')), '/backendAddressPools/lb01be')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc1Name')), concat('/probes/', variables('lbLoc1Name'), 'hp'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(variables('lbLoc1Name'), 'hp')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-07-01",
            "name": "[variables('lbLoc2Name')]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb2Name'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb2Name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "lb02be",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(variables('lbLoc2Name'), 'rule')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc2Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc2Name')), '/backendAddressPools/lb02be')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc2Name')), concat('/probes/', variables('lbLoc2Name'), 'hp'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(variables('lbLoc2Name'), 'hp')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vnetLoc1Name'), '/subnet01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetLoc1Name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vnetLoc2Name'), '/subnet01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetLoc2Name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/trafficManagerProfiles",
            "apiVersion": "2018-04-01",
            "name": "[variables('trafficManagerName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb1Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb2Name'))]"
            ],
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Weighted",
                "dnsConfig": {
                    "relativeName": "[concat(parameters('applicationDnsName'),'-do2019-tm')]",
                    "ttl": 60
                },
                "monitorConfig": {
                    "protocol": "HTTP",
                    "port": 80,
                    "path": "/",
                    "intervalInSeconds": 30,
                    "toleratedNumberOfFailures": 3,
                    "timeoutInSeconds": 10
                },
                "endpoints": [
                    {
                        "name": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc1Name'))]",
                        "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb1Name'))]",
                            "target": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc1Name'), '.', variables('location1'), '.cloudapp.azure.com')]",
                            "weight": 50,
                            "priority": 1,
                            "endpointLocation": "[variables('location1')]"
                        }
                    },
                    {
                        "name": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc2Name'))]",
                        "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
                        "properties": {
                            "endpointStatus": "Enabled",
                            "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipLb2Name'))]",
                            "target": "[concat(parameters('applicationDnsName'), '-', variables('lbLoc2Name'), '.', variables('location2'), '.cloudapp.azure.com')]",
                            "weight": 50,
                            "priority": 2,
                            "endpointLocation": "[variables('location2')]"
                        }
                    }
                ],
                "trafficViewEnrollmentStatus": "Disabled",
                "maxReturn": 0
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmLoc1Prefix'),'-01-nic')]",
            "location": "[variables('location1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetLoc1Name'), 'subnet01')]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbLoc1Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgLoc1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetLoc1Name'), 'subnet01')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc1Name')), '/backendAddressPools/lb01be')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgLoc1Name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmLoc2Prefix'),'-01-nic')]",
            "location": "[variables('location2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetLoc2Name'), 'subnet01')]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbLoc2Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgLoc2Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetLoc2Name'), 'subnet01')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbLoc2Name')), '/backendAddressPools/lb02be')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgLoc2Name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmLoc1Prefix'),'-01','/newuserscript')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location1')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmLoc1Prefix'),'-01')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                    "https://raw.githubusercontent.com/devops-summit/azure-workshop/master/install-apache-we-01.sh"
                    ],
                "commandToExecute": "sh install-apache-we-01.sh"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmLoc2Prefix'),'-01','/newuserscript')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location2')]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('vmLoc2Prefix'),'-01')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/devops-summit/azure-workshop/master/install-apache-ne-01.sh"
                    ],
                "commandToExecute": "sh install-apache-ne-01.sh"
                }
            }
        }
    ]
}